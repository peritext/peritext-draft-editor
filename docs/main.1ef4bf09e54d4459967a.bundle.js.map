{"version":3,"file":"main.1ef4bf09e54d4459967a.bundle.js","sources":["webpack:///./stories/FieldInput.js"],"sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class FieldInput extends Component {\n  static propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ])\n  };\n\n  constructor (...args) {\n    super(...args);\n\n    this._rawStr = '';\n    this._caretPosition = 0;\n  }\n\n  componentDidUpdate = ({ value }) => {\n    if (this.props.value !== value) {\n      const str = this._rawStr.substr(0, this._caretPosition);\n      const index = String(this.props.value).indexOf(str) + this._caretPosition;\n\n      if (index !== -1) {\n        this.input.selectionStart = this.input.selectionEnd = index;\n      }\n    }\n  }\n\n  focus = () => {\n    this.input.focus();\n  }\n\n  handleChange = (ev) => {\n    console.log('update input');\n    this._rawStr = String(ev.target.value);\n    this._caretPosition = Number(ev.target.selectionEnd);\n\n    if (this.props.onChange) {\n      this.props.onChange(ev);\n    }\n  }\n\n  render () {\n    const bindRef = input => this.input = input;\n    return (<input {...this.props} ref={bindRef} onChange={this.handleChange} />);\n  }\n};"],"mappings":"AAGA","sourceRoot":""}